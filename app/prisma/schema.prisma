// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

// model definition ------------------------------------------------------
model Skill {
  id          Int              @id @default(autoincrement())
  description String
  users       SkillToUser[]
  projects    ProjectToSkill[]
  updatedAt   DateTime         @updatedAt

  @@map("skills")
}

model SkillToUser {
  id        Int      @id @default(autoincrement())
  skill     Skill    @relation(fields: [skillId], references: [id])
  skillId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  updatedAt DateTime @updatedAt

  @@map("skillsTousers")
}

model ProjectToSkill {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  skill     Skill    @relation(fields: [skillId], references: [id])
  skillId   Int
  updatedAt DateTime @updatedAt

  @@map("projectsToskills")
}

model User {
  id                  Int           @id @default(autoincrement())
  email               String?       @unique
  github_account_url  String?
  twitter_account_url String?
  image_url           String
  type                String
  experience          String
  description         String
  skills              SkillToUser[]
  updatedAt           DateTime      @updatedAt

  @@map("users")
}

model Project {
  id              Int                       @id @default(autoincrement())
  title           String
  description     String
  projectType     ProjectType               @relation(fields: [projectTypeId], references: [id])
  projectTypeId   Int
  projectFeatures ProjectToProjectFeature[]
  projectStatuses ProjectToProgressStatus[]
  skills          ProjectToSkill[]
  updatedAt       DateTime                  @updatedAt

  @@map("projects")
}

// 10% | 20%
model ProgressStatus {
  id        Int                       @id @default(autoincrement())
  rate      String
  projects  ProjectToProgressStatus[]
  updatedAt DateTime                  @updatedAt

  @@map("progress_statuses")
}

model ProjectToProgressStatus {
  id               Int            @id @default(autoincrement())
  progressStatus   ProgressStatus @relation(fields: [progressStatusId], references: [id])
  progressStatusId Int
  project          Project        @relation(fields: [projectId], references: [id])
  projectId        Int
  updatedAt        DateTime       @updatedAt

  @@map("projectsToprogress_statuses")
}

// 企業案件 | 報酬あり | xxx募集中 ...
model ProjectFeature {
  id          Int                       @id @default(autoincrement())
  description String
  projects    ProjectToProjectFeature[]
  updatedAt   DateTime                  @updatedAt

  @@map("project_features")
}

model ProjectToProjectFeature {
  id               Int            @id @default(autoincrement())
  Project          Project        @relation(fields: [projectId], references: [id])
  projectId        Int
  ProjectFeature   ProjectFeature @relation(fields: [projectFeatureId], references: [id])
  projectFeatureId Int
  updatedAt        DateTime       @updatedAt

  @@map("projectsToproject_features")
}

// sns | ecサイト | ホームページ ...
model ProjectType {
  id          Int       @id @default(autoincrement())
  description String
  projects    Project[]
  updatedAt   DateTime  @updatedAt

  @@map("project_types")
}
